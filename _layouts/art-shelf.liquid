---
layout: page
---
{{ content }}

<!-- Filter Controls -->
<div class="portfolio-filters">
  <button class="filter-btn active" data-filter="all">All</button>
  {% assign mediums = site.art | map: 'medium' | uniq | compact %}
  {% for medium in mediums %}
    <button class="filter-btn" data-filter="{{ medium | slugify }}">{{ medium }}</button>
  {% endfor %}
</div>

{% if page.collection and page.collection.size > 0 %}
  {% assign collection = site[page.collection] %}
  {% if collection and collection.size > 0 %}
    {% assign sorted_collection = collection | sort: 'date' | reverse %}
    {% assign year = '' %}
    {% for item in sorted_collection %}
      {% if item.year %}
        {% assign current_year = item.year %}
      {% elsif item.date %}
        {% assign current_year = item.date | date: '%Y' %}
      {% else %}
        {% assign current_year = 'Unknown' %}
      {% endif %}
      
      {% if current_year != year %}
        {% unless forloop.first %}
          </div>
        {% endunless %}
         <h1>
           {{current_year}}
         </h1>
        <div class="artwork-grid-year">
          {% assign year = current_year %}
      {% endif %}

      <figure class="artwork-cover" data-medium="{{ item.medium | slugify | default: 'unknown' }}">
        <a class="artwork-link" href="{{ item.url | relative_url }}">
          {% if item.image %}
            {% if item.image contains 'assets/img/' %}
              {% assign image_path = item.image %}
            {% else %}
              {% assign image_path = item.image | prepend: 'assets/img/' %}
            {% endif %}
            <img alt="{{ item.title }} artwork" src="{{ image_path | relative_url }}" style="height:200px; object-fit: contain; width: 100%;">
          {% else %}
            <div class="artwork-placeholder" style="height:200px; display: flex; align-items: center; justify-content: center; background: var(--global-bg-color); color: var(--global-text-color-light);">
              <i class="fa-solid fa-image fa-2x"></i>
            </div>
          {% endif %}
          {% if item.featured %}
            <figcaption class="featured">FEATURED</figcaption>
          {% endif %}
        </a>
        <div class="artwork-info">
          <h3 class="artwork-title">{{ item.title }}</h3>
          {% if item.medium %}
            <p class="artwork-medium">{{ item.medium }}</p>
          {% endif %}
          {% if item.category %}
            <p class="artwork-category">{{ item.category }}</p>
          {% endif %}
        </div>
      </figure>
      {% if forloop.last %}
        </div>
      {% endif %}
    {% endfor %}
  {% endif %}
{% endif %}

<style>
/* Filter Controls */
.portfolio-filters {
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  gap: 0.5rem;
  margin-bottom: 2rem;
  padding-bottom: 1rem;
  border-bottom: 1px solid var(--global-divider-color);
}

.filter-btn {
  background: var(--global-bg-color);
  border: 1px solid var(--global-divider-color);
  color: var(--global-text-color);
  padding: 0.5rem 1rem;
  border-radius: 20px;
  cursor: pointer;
  transition: all 0.3s ease;
  font-size: 0.9rem;
}

.filter-btn:hover {
  background: var(--global-theme-color);
  color: var(--global-bg-color);
  border-color: var(--global-theme-color);
}

.filter-btn.active {
  background: var(--global-theme-color);
  color: var(--global-bg-color);
  border-color: var(--global-theme-color);
}

.artwork-grid-year {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  gap: 2rem;
  margin-bottom: 3rem;
}

.artwork-cover {
  text-align: center;
  margin: 0;
}

.artwork-cover img {
  border-radius: 8px;
  transition: transform 0.3s ease;
}

.artwork-link {
  text-decoration: none;
  color: inherit;
  display: block;
}

.artwork-link:hover {
  text-decoration: none;
  color: inherit;
}

.artwork-cover figcaption {
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
  background: var(--global-theme-color);
  color: var(--global-bg-color);
  padding: 0.3rem 0.6rem;
  border-radius: 12px;
  font-size: 0.75rem;
  font-weight: bold;
}

.artwork-info {
  margin-top: 0.5rem;
  text-align: center;
}

.artwork-title {
  font-size: 1rem;
  margin: 0 0 0.25rem 0;
  color: var(--global-text-color);
}

.artwork-medium,
.artwork-category {
  font-size: 0.8rem;
  margin: 0;
  color: var(--global-text-color-light);
}

.artwork-placeholder {
  border: 2px dashed var(--global-divider-color);
  border-radius: 8px;
}

@media (max-width: 768px) {
  .artwork-grid-year {
    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
    gap: 1rem;
  }
  
  .portfolio-filters .filter-btn {
    font-size: 0.8rem;
    padding: 0.4rem 0.8rem;
  }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Filter functionality
  const filterButtons = document.querySelectorAll('.filter-btn');
  const artworkItems = document.querySelectorAll('.artwork-cover');
  const yearSections = document.querySelectorAll('h1[id^="y"]');

  if (filterButtons.length > 0 && artworkItems.length > 0) {
    filterButtons.forEach(button => {
      button.addEventListener('click', function() {
        const filter = this.getAttribute('data-filter');
        
        // Update active button
        filterButtons.forEach(btn => btn.classList.remove('active'));
        this.classList.add('active');
        
        // Use requestAnimationFrame for smoother animations
        requestAnimationFrame(() => {
          // Filter artwork items with smoother transitions
          artworkItems.forEach(item => {
            const shouldShow = filter === 'all' || item.getAttribute('data-medium') === filter;
            
            if (shouldShow) {
              item.style.display = 'block';
              item.style.opacity = '0';
              item.style.transition = 'opacity 0.2s ease';
              requestAnimationFrame(() => {
                item.style.opacity = '1';
              });
            } else {
              item.style.opacity = '0';
              item.style.transition = 'opacity 0.2s ease';
              setTimeout(() => {
                if (item.style.opacity === '0') {
                  item.style.display = 'none';
                }
              }, 200);
            }
          });
          
          // Hide/show year headers based on visible artwork
          setTimeout(() => {
            yearSections.forEach(header => {
              const yearGrid = header.nextElementSibling;
              if (!yearGrid) return;
              
              // Count visible artwork in this year
              const visibleArtwork = Array.from(yearGrid.querySelectorAll('.artwork-cover')).filter(item => {
                return item.style.display !== 'none' && item.style.opacity !== '0';
              });
              
              if (visibleArtwork.length === 0) {
                header.style.display = 'none';
                yearGrid.style.display = 'none';
              } else {
                header.style.display = 'block';
                yearGrid.style.display = 'block';
              }
            });
          }, 250); // Wait for opacity transitions to complete
        });
      });
    });
  }
});
</script>